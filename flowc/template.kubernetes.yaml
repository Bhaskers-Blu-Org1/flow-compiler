apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{NAME}}-{{MAIN_POD}}
  labels:
    app: {{NAME}}
    flow-group: {{NAME}}
spec:
  replicas: ${replicas_{{NAME_UPPERID}}}
  selector:
    matchLabels:
      app: {{NAME}}
  template:
    metadata:
      labels:
        app: {{NAME}}
        flow-group: {{NAME}}
    spec:
{X:HAVE_IMAGE_PULL_SECRETS{
      imagePullSecrets:{{HAVE_IMAGE_PULL_SECRETS}}}X}
{S:IMAGE_PULL_SECRET{
      - name: "{{IMAGE_PULL_SECRET}}"
}S}
      initContainers:
{I:G_INIT_CONTAINER{
      - {{G_INIT_CONTAINER}}
}I}
{W:VOLUME_NAME{
${{{VOLUME_UPPERID}}_ART}      - command: ["/bin/sh", "-c", "/usr/local/bin/rr-get.sh '${{{VOLUME_UPPERID}}}' -d /etc/cos-access -u -o /to-1"]
${{{VOLUME_UPPERID}}_PVC}      - command: ["/bin/sh", "-c", "rsync -vrtlog /from-1/. /to-1"] 
        image:  "{{PUSH_REPO:}}{{IMAGE}}" 
        securityContext: {privileged: true, runAsUser: 0} 
        name: volumes-init-{{VOLUME_OPTION}}
        volumeMounts:
${{{VOLUME_UPPERID}}_PVC}        - name: {{VOLUME_OPTION}}
${{{VOLUME_UPPERID}}_PVC}          mountPath: "/from-1"
${{{VOLUME_UPPERID}}_PVC}          readOnly: true
${{{VOLUME_UPPERID}}_ART}        - name: api-key-{{VOLUME_OPTION}}
${{{VOLUME_UPPERID}}_ART}          mountPath: "/etc/artifactory"
${{{VOLUME_UPPERID}}_ART}          readOnly: true

        - name: scratch-{{VOLUME_OPTION}}
          mountPath: "/to-1"
          readOnly: false
}W}
$enable_htdocs$htdocs_ART      - command: ["/bin/sh", "-c", "/usr/local/bin/rr-get.sh '${{{NAME_UPPERID}}_HTDOCS}' -d /etc/cos-access -u -o /to-1"]
$enable_htdocs$htdocs_PVC      - command: ["/bin/sh", "-c", "rsync -vrtlog /from-1/. /to-1"] 
$enable_htdocs        image:  "{{PUSH_REPO:}}{{IMAGE}}" 
$enable_htdocs        securityContext: {privileged: true, runAsUser: 0} 
$enable_htdocs        name: volumes-init-{{HTDOCS_VOLUME_NAME}}
$enable_htdocs        volumeMounts:
$enable_htdocs$htdocs_PVC        - name: {{HTDOCS_VOLUME_NAME}}
$enable_htdocs$htdocs_PVC          mountPath: "/from-1"
$enable_htdocs$htdocs_PVC          readOnly: true
$enable_htdocs$htdocs_COS        - name: cos-access-{{HTDOCS_VOLUME_NAME}}
$enable_htdocs$htdocs_COS          mountPath: "/etc/cos-access"
$enable_htdocs$htdocs_COS          readOnly: true
$enable_htdocs$htdocs_ART        - name: api-key-{{HTDOCS_VOLUME_NAME}}
$enable_htdocs$htdocs_ART          mountPath: "/etc/artifactory"
$enable_htdocs$htdocs_ART          readOnly: true
$enable_htdocs        - name: scratch-{{HTDOCS_VOLUME_NAME}}
$enable_htdocs          mountPath: "/to-1"
$enable_htdoes          readOnly: false
      containers:
      - name: {{NAME}}
        image: "{{PUSH_REPO:}}{{IMAGE}}"
        command: ["/home/worker/{{NAME}}/{{NAME}}-server"]
        args: ["{{MAIN_PORT}}"]
        ports:
          - name: grpc
            containerPort: {{MAIN_PORT}}
          - name: rest
            containerPort: {{REST_PORT}}
        env:
          - name: {{NAME_UPPERID}}_REST_PORT
            value: "{{REST_PORT}}"
          - name: {{NAME_UPPERID}}_DEBUG
            value: "1"
          - name: {{NAME_UPPERID}}_ASYNC
            value: "1"
{K:MAIN_ENVIRONMENT_KEY{
          - name: {{MAIN_ENVIRONMENT_KEY}}
            value: "{{MAIN_ENVIRONMENT_VALUE}}"
}K}
$enable_htdocs        volumeMounts:
$enable_htdocs        - name: {{HTDOCS_VOLUME_NAME}}
$enable_htdocs          mountPath: "/home/worker/pr/htdocs"
$enable_htdocs          readOnly: true

{N:G_NODE_NAME{
{{G_EXTERN_NODE}}      - name: {{G_NODE_OPTION}}
{{G_EXTERN_NODE}}        image: "{{G_NODE_IMAGE}}"
{{G_EXTERN_NODE}}        {{G_NODE_ENVIRONMENT}}
{{G_EXTERN_NODE}}        {{G_NODE_MOUNTS}}
{{G_EXTERN_NODE}}{{G_NODE_HAVE_MIN_MAX}}        resources:
{{G_EXTERN_NODE}}{{G_NODE_HAVE_MIN}}          requests:
{{G_EXTERN_NODE}}{{G_NODE_HAVE_MIN_MEMORY}}            memory: "{{G_NODE_MIN_MEMORY}}"
{{G_EXTERN_NODE}}{{G_NODE_HAVE_MIN_CPUS}}            cpu: "{{G_NODE_MIN_CPUS}}"
{{G_EXTERN_NODE}}{{G_NODE_HAVE_MIN_GPUS}}            nvidia.com/gpu: "{{G_NODE_MIN_GPUS}}"
{{G_EXTERN_NODE}}{{G_NODE_HAVE_MAX}}          limis:
{{G_EXTERN_NODE}}{{G_NODE_HAVE_MAX_MEMORY}}            memory: "{{G_NODE_MAX_MEMORY}}"
{{G_EXTERN_NODE}}{{G_NODE_HAVE_MAX_CPUS}}            cpu: "{{G_NODE_MAX_CPUS}}"
{{G_EXTERN_NODE}}{{G_NODE_HAVE_MAX_GPUS}}            nvidia.com/gpu: "{{G_NODE_MAX_GPUS}}"
}N}

$enable_htdocs      volumes:
$enable_htdocs$htdocs_PVC        - name: {{HTDOCS_VOLUME_NAME}}    
$enable_htdocs$htdocs_PVC          persistentVolumeClaim:
$enable_htdocs$htdocs_PVC            claimName: ${{{NAME_UPPERID}}_HTDOCS}
$enable_htdocs$htdocs_COS        - name: cos-access-{{HTDOCS_VOLUME_NAME}}
$enable_htdocs$htdocs_COS          secret:
$enable_htdocs$htdocs_COS            secretName: ${{{NAME_UPPERID}}_HTDOCS_SECRET_NAME}
$enable_htdocs$htdocs_ART        - name: api-key-{{HTDOCS_VOLUME_NAME}}
$enable_htdocs$htdocs_ART          secret:
$enable_htdocs$htdocs_ART            secretName: ${{{NAME_UPPERID}}_HTDOCS_SECRET_NAME}
$enable_htdocs$htdocs_COS        - name: scratch-{{HTDOCS_VOLUME_NAME}}
$enable_htdocs$htdocs_COS          emptyDir: {}
$enable_htdocs$htdocs_ART        - name: scratch-{{HTDOCS_VOLUME_NAME}}
$enable_htdocs$htdocs_ART          emptyDir: {}

{W:VOLUME_NAME{
${{{VOLUME_UPPERID}}_PVC}        - name: {{VOLUME_OPTION}}
${{{VOLUME_UPPERID}}_PVC}          persistentVolumeClaim:
${{{VOLUME_UPPERID}}_PVC}            claimName: ${{{VOLUME_UPPERID}}}
${{{VOLUME_UPPERID}}_COS}        - name: cos-access-{{VOLUME_OPTION}}
${{{VOLUME_UPPERID}}_COS}          secret:
${{{VOLUME_UPPERID}}_COS}            secretName: ${{{VOLUME_UPPERID}}_SECRET_NAME}
${{{VOLUME_UPPERID}}_ART}        - name: api-key-{{VOLUME_OPTION}}
${{{VOLUME_UPPERID}}_ART}          secret:
${{{VOLUME_UPPERID}}_ART}            secretName: ${{{VOLUME_UPPERID}}_SECRET_NAME}
${{{VOLUME_UPPERID}}_COS}        - name: scratch-{{VOLUME_OPTION}}
${{{VOLUME_UPPERID}}_COS}          emptyDir: {}
${{{VOLUME_UPPERID}}_ART}        - name: scratch-{{VOLUME_OPTION}}
${{{VOLUME_UPPERID}}_ART}          emptyDir: {}
}W}
---
apiVersion: v1
kind: Service
metadata:
  name: {{NAME}}
  labels:
    flow-group: {{NAME}}
    app: {{NAME}}
spec:
  ports:
  - port: {{MAIN_PORT}}
    protocol: TCP
    name: grpc
  - port:  {{REST_PORT}}
    protocol: TCP
    name: http
  selector:
    app: {{NAME}}
